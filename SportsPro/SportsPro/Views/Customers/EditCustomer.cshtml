@model SportsPro.Models.DomainModels.Customers
@{
    string action = "";
    if (Model.CustomerId > 0)
    {
        action = "Edit";
        ViewBag.Title = "Edit Customer";
    }
    else
    {
        action = "Add";
        ViewBag.Title = "Add Customer";
    }

}

@section scripts {
@{
    await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
}

<h1>@(action) Customer</h1>
<form asp-action="EditCustomer" method="post">
    <div class="mb-3">
        <label asp-for="FirstName" class="form-label">First Name</label>
        <input asp-for="FirstName" class="form-control" />
        <span asp-validation-for="FirstName" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="LastName" class="form-label">Last Name</label>
        <input asp-for="LastName" class="form-control" />
        <span asp-validation-for="LastName" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="Address" class="form-label">Address</label>
        <input asp-for="Address" class="form-control" />
        <span asp-validation-for="Address" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="City" class="form-label">City</label>
        <input asp-for="City" class="form-control" />
        <span asp-validation-for="City" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="State" class="form-label">State</label>
        <input asp-for="State" class="form-control" />
        <span asp-validation-for="State" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="PostalCode" class="form-label">Postal Code</label>
        <input asp-for="PostalCode" class="form-control" />
        <span asp-validation-for="PostalCode" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="CountryId" class="form-label">Select a Country</label>
        <select asp-for="CountryId" asp-items="ViewBag.CountrySelectList" class="form-select">
            <option value="">Select a Country</option>
        </select>
        <span asp-validation-for="CountryId" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="Phone" class="form-label">Phone</label>
        <input asp-for="Phone" class="form-control" id="formattedPhone" />
        <span asp-validation-for="Phone" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="Email" class="form-label">Email</label>
        <input asp-for="Email" class="form-control" />
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>
    <input type="hidden" asp-for="CustomerId" />
    <button type="submit" class="btn btn-outline-primary btn-dark">Save</button>
    <a asp-controller="Customers" asp-action="CustomerList" class="btn btn-outline-secondary btn-dark">Cancel</a>
    <script>
        document.getElementById('formattedPhone').addEventListener('input', function (e) {
            var input = e.target.value.replace(/\D/g, ''); // Remove non-numeric characters
            var formattedInput = formatPhoneNumber(input);
            e.target.value = formattedInput.substr(0, 13); // Limit to 14 characters
        });

        function formatPhoneNumber(phoneNumber) {
            var formattedNumber = '';
            if (phoneNumber.length >= 4) {
                formattedNumber += '(' + phoneNumber.substr(0, 3) + ')';
                phoneNumber = phoneNumber.substr(3);
            }
            if (phoneNumber.length >= 4) {
                formattedNumber += phoneNumber.substr(0, 3) + '-';
                phoneNumber = phoneNumber.substr(3);
            }
            formattedNumber += phoneNumber;
            return formattedNumber;
        }
    </script>
</form>